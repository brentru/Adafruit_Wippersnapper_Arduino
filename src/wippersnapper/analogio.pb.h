/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 at Thu Dec 14 12:04:08 2023. */

#ifndef PB_WIPPERSNAPPER_ANALOGIO_WIPPERSNAPPER_ANALOGIO_PB_H_INCLUDED
#define PB_WIPPERSNAPPER_ANALOGIO_WIPPERSNAPPER_ANALOGIO_PB_H_INCLUDED
#include <pb.h>
#include "wippersnapper/sensor.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* *
 Selects the type of value read by an analog pin.
 PIN_VALUE: Raw ADC reading.
 PIN_VOLTAGE: Calculated voltage reading. */
typedef enum _wippersnapper_analogio_AnalogReadMode {
    wippersnapper_analogio_AnalogReadMode_ANALOG_READ_MODE_UNSPECIFIED = 0, /* Default value. */
    wippersnapper_analogio_AnalogReadMode_ANALOG_READ_MODE_PIN_VALUE = 1, /* Raw ADC reading. */
    wippersnapper_analogio_AnalogReadMode_ANALOG_READ_MODE_PIN_VOLTAGE = 2 /* Calculated voltage reading. */
} wippersnapper_analogio_AnalogReadMode;

/* Struct definitions */
/* *
 AnalogIOAdd adds an analog pin to the device. */
typedef struct _wippersnapper_analogio_AnalogIOAdd {
    int32_t gpio_num; /* Correlates with `name` in the JSON definition */
    float period; /* Period is in seconds */
    wippersnapper_analogio_AnalogReadMode read_mode; /* Type of value read by an analog pin. */
} wippersnapper_analogio_AnalogIOAdd;

/* *
 AnalogIORemove removes an analog pin from the device. */
typedef struct _wippersnapper_analogio_AnalogIORemove {
    int32_t gpio_num; /* correlates with `name` in the JSON */
} wippersnapper_analogio_AnalogIORemove;

/* *
 AnalogIOEvent is contains a value, sent when an analog pin is read. */
typedef struct _wippersnapper_analogio_AnalogIOEvent {
    int32_t gpio_num; /* correlates with `name` in the JSON */
    bool has_sensor_event;
    wippersnapper_sensor_SensorEvent sensor_event; /* * Reading(s) from an analog pin. */
} wippersnapper_analogio_AnalogIOEvent;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _wippersnapper_analogio_AnalogReadMode_MIN wippersnapper_analogio_AnalogReadMode_ANALOG_READ_MODE_UNSPECIFIED
#define _wippersnapper_analogio_AnalogReadMode_MAX wippersnapper_analogio_AnalogReadMode_ANALOG_READ_MODE_PIN_VOLTAGE
#define _wippersnapper_analogio_AnalogReadMode_ARRAYSIZE ((wippersnapper_analogio_AnalogReadMode)(wippersnapper_analogio_AnalogReadMode_ANALOG_READ_MODE_PIN_VOLTAGE+1))

#define wippersnapper_analogio_AnalogIOAdd_read_mode_ENUMTYPE wippersnapper_analogio_AnalogReadMode




/* Initializer values for message structs */
#define wippersnapper_analogio_AnalogIOAdd_init_default {0, 0, _wippersnapper_analogio_AnalogReadMode_MIN}
#define wippersnapper_analogio_AnalogIORemove_init_default {0}
#define wippersnapper_analogio_AnalogIOEvent_init_default {0, false, wippersnapper_sensor_SensorEvent_init_default}
#define wippersnapper_analogio_AnalogIOAdd_init_zero {0, 0, _wippersnapper_analogio_AnalogReadMode_MIN}
#define wippersnapper_analogio_AnalogIORemove_init_zero {0}
#define wippersnapper_analogio_AnalogIOEvent_init_zero {0, false, wippersnapper_sensor_SensorEvent_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define wippersnapper_analogio_AnalogIOAdd_gpio_num_tag 1
#define wippersnapper_analogio_AnalogIOAdd_period_tag 2
#define wippersnapper_analogio_AnalogIOAdd_read_mode_tag 3
#define wippersnapper_analogio_AnalogIORemove_gpio_num_tag 1
#define wippersnapper_analogio_AnalogIOEvent_gpio_num_tag 1
#define wippersnapper_analogio_AnalogIOEvent_sensor_event_tag 2

/* Struct field encoding specification for nanopb */
#define wippersnapper_analogio_AnalogIOAdd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    gpio_num,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    period,            2) \
X(a, STATIC,   SINGULAR, UENUM,    read_mode,         3)
#define wippersnapper_analogio_AnalogIOAdd_CALLBACK NULL
#define wippersnapper_analogio_AnalogIOAdd_DEFAULT NULL

#define wippersnapper_analogio_AnalogIORemove_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    gpio_num,          1)
#define wippersnapper_analogio_AnalogIORemove_CALLBACK NULL
#define wippersnapper_analogio_AnalogIORemove_DEFAULT NULL

#define wippersnapper_analogio_AnalogIOEvent_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    gpio_num,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor_event,      2)
#define wippersnapper_analogio_AnalogIOEvent_CALLBACK NULL
#define wippersnapper_analogio_AnalogIOEvent_DEFAULT NULL
#define wippersnapper_analogio_AnalogIOEvent_sensor_event_MSGTYPE wippersnapper_sensor_SensorEvent

extern const pb_msgdesc_t wippersnapper_analogio_AnalogIOAdd_msg;
extern const pb_msgdesc_t wippersnapper_analogio_AnalogIORemove_msg;
extern const pb_msgdesc_t wippersnapper_analogio_AnalogIOEvent_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define wippersnapper_analogio_AnalogIOAdd_fields &wippersnapper_analogio_AnalogIOAdd_msg
#define wippersnapper_analogio_AnalogIORemove_fields &wippersnapper_analogio_AnalogIORemove_msg
#define wippersnapper_analogio_AnalogIOEvent_fields &wippersnapper_analogio_AnalogIOEvent_msg

/* Maximum encoded size of messages (where known) */
#define WIPPERSNAPPER_ANALOGIO_WIPPERSNAPPER_ANALOGIO_PB_H_MAX_SIZE wippersnapper_analogio_AnalogIOAdd_size
#define wippersnapper_analogio_AnalogIOAdd_size  18
#define wippersnapper_analogio_AnalogIORemove_size 11
#if defined(wippersnapper_sensor_SensorEvent_size)
#define wippersnapper_analogio_AnalogIOEvent_size (17 + wippersnapper_sensor_SensorEvent_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
