/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 at Wed Dec 13 12:44:19 2023. */

#ifndef PB_WIPPERSNAPPER_DESCRIPTION_WIPPERSNAPPER_DESCRIPTION_PB_H_INCLUDED
#define PB_WIPPERSNAPPER_DESCRIPTION_WIPPERSNAPPER_DESCRIPTION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* *
 Response. Specifies if the hardware definiton is within the database. */
typedef enum _wippersnapper_description_CreateDescription_Response {
    wippersnapper_description_CreateDescription_Response_RESPONSE_UNSPECIFIED = 0, /* * Invalid response from server */
    wippersnapper_description_CreateDescription_Response_RESPONSE_OK = 1, /* * Board found within definition index */
    wippersnapper_description_CreateDescription_Response_RESPONSE_BOARD_NOT_FOUND = 2 /* * Board not found in definition index */
} wippersnapper_description_CreateDescription_Response;

/* Struct definitions */
/* *
 CreateDescriptionRequest identifies a device with Adafruit.io WipperSnapper. */
typedef struct _wippersnapper_description_CreateDescriptionRequest {
    char str_version[20]; /* * Library version, as a string */
} wippersnapper_description_CreateDescriptionRequest;

/* *
 CreateDescription represents a device's specifications. */
typedef struct _wippersnapper_description_CreateDescription {
    wippersnapper_description_CreateDescription_Response response; /* * Specifies if the hardware definition exists on the server. */
    int32_t total_gpio_pins; /* * Specifies the number of GPIO pins on the device. */
    int32_t total_analog_pins; /* * Specifies the number of analog pins on the device. */
    float reference_voltage; /* * Specifies the hardware's default reference voltage. */
    int32_t total_i2c_ports; /* * Specifies the number of hardware's I2C ports (i2cPorts[]). */
} wippersnapper_description_CreateDescription;

/* *
 RegistrationComplete Specifies if the device finished configuring
 its components and is ready for configuration messages. */
typedef struct _wippersnapper_description_RegistrationComplete {
    bool is_complete; /* * Did the device successfully configure its components? */
} wippersnapper_description_RegistrationComplete;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _wippersnapper_description_CreateDescription_Response_MIN wippersnapper_description_CreateDescription_Response_RESPONSE_UNSPECIFIED
#define _wippersnapper_description_CreateDescription_Response_MAX wippersnapper_description_CreateDescription_Response_RESPONSE_BOARD_NOT_FOUND
#define _wippersnapper_description_CreateDescription_Response_ARRAYSIZE ((wippersnapper_description_CreateDescription_Response)(wippersnapper_description_CreateDescription_Response_RESPONSE_BOARD_NOT_FOUND+1))


#define wippersnapper_description_CreateDescription_response_ENUMTYPE wippersnapper_description_CreateDescription_Response



/* Initializer values for message structs */
#define wippersnapper_description_CreateDescriptionRequest_init_default {""}
#define wippersnapper_description_CreateDescription_init_default {_wippersnapper_description_CreateDescription_Response_MIN, 0, 0, 0, 0}
#define wippersnapper_description_RegistrationComplete_init_default {0}
#define wippersnapper_description_CreateDescriptionRequest_init_zero {""}
#define wippersnapper_description_CreateDescription_init_zero {_wippersnapper_description_CreateDescription_Response_MIN, 0, 0, 0, 0}
#define wippersnapper_description_RegistrationComplete_init_zero {0}

/* Field tags (for use in manual encoding/decoding) */
#define wippersnapper_description_CreateDescriptionRequest_str_version_tag 1
#define wippersnapper_description_CreateDescription_response_tag 1
#define wippersnapper_description_CreateDescription_total_gpio_pins_tag 2
#define wippersnapper_description_CreateDescription_total_analog_pins_tag 3
#define wippersnapper_description_CreateDescription_reference_voltage_tag 4
#define wippersnapper_description_CreateDescription_total_i2c_ports_tag 5
#define wippersnapper_description_RegistrationComplete_is_complete_tag 1

/* Struct field encoding specification for nanopb */
#define wippersnapper_description_CreateDescriptionRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   str_version,       1)
#define wippersnapper_description_CreateDescriptionRequest_CALLBACK NULL
#define wippersnapper_description_CreateDescriptionRequest_DEFAULT NULL

#define wippersnapper_description_CreateDescription_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    response,          1) \
X(a, STATIC,   SINGULAR, INT32,    total_gpio_pins,   2) \
X(a, STATIC,   SINGULAR, INT32,    total_analog_pins,   3) \
X(a, STATIC,   SINGULAR, FLOAT,    reference_voltage,   4) \
X(a, STATIC,   SINGULAR, INT32,    total_i2c_ports,   5)
#define wippersnapper_description_CreateDescription_CALLBACK NULL
#define wippersnapper_description_CreateDescription_DEFAULT NULL

#define wippersnapper_description_RegistrationComplete_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     is_complete,       1)
#define wippersnapper_description_RegistrationComplete_CALLBACK NULL
#define wippersnapper_description_RegistrationComplete_DEFAULT NULL

extern const pb_msgdesc_t wippersnapper_description_CreateDescriptionRequest_msg;
extern const pb_msgdesc_t wippersnapper_description_CreateDescription_msg;
extern const pb_msgdesc_t wippersnapper_description_RegistrationComplete_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define wippersnapper_description_CreateDescriptionRequest_fields &wippersnapper_description_CreateDescriptionRequest_msg
#define wippersnapper_description_CreateDescription_fields &wippersnapper_description_CreateDescription_msg
#define wippersnapper_description_RegistrationComplete_fields &wippersnapper_description_RegistrationComplete_msg

/* Maximum encoded size of messages (where known) */
#define WIPPERSNAPPER_DESCRIPTION_WIPPERSNAPPER_DESCRIPTION_PB_H_MAX_SIZE wippersnapper_description_CreateDescription_size
#define wippersnapper_description_CreateDescriptionRequest_size 21
#define wippersnapper_description_CreateDescription_size 40
#define wippersnapper_description_RegistrationComplete_size 2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
